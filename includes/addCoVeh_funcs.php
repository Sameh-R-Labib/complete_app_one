<?php
error_reporting(E_ALL);
ini_set("display_errors", 1);

/* This file is for inclusion in addCompanyVehicle.php. */


// Gives us isDate()
require_once('generalFormFuncs.php');


function presentTagStateForm() {
/*
Assumptions:
   1. Valid user.
   2. This form is being presente for either one of the
      following reasons:
          A. The main script is in its first iteration.
          B. The main script has detected invalid values
             for $tag and $state and wants to present
             stageOne form again.

Results To Expect:
   1. Global $status_message string is used for displaying a possible
      message generated by the main program.
   2. Pass the stageTwo value for mode as a hidden form field.
   3. Pass the global $submitCounter value through as a hidden field in
      the form.
   4. Present an error message if $status_message is not
      an empty string.
   5. Present the tag and state form fields.
*/

  global $status_message, $submitCounter;


  /*
  Construct form:
  */

  site_header('Add Company Vehicle');

  // Superglobals don't work with heredoc
  $php_self = $_SERVER['PHP_SELF'];

  if ( !isset($status_message) || $status_message == "" ) {
    $message_str = "";
  } else {
    $message_str = "<p class=\"errmsg\">$status_message</p>";
  }

  $userform_str = <<<EOUSERFORMSTR

$message_str

<p>This page allows you to update a company vehicle record in the database table
for company vehicles. This table is used by other scripts (including
the ones for maintenance.)</p>

<form action="$php_self" method="post" class="loginform">
  <fieldset>
  <legend>Specify a Vehicle: <span class="formcomment">*All fields required</span></legend>
  <div>
    <label for="tag" class="fixedwidth">tag</label>
    <input type="text" name="tag" id="tag" value="" size="12" maxlength="12"/>
  </div>
  <div>
    <label for="state" class="fixedwidth">state</label>
    <input type="text" name="state" id="state" value="" size="12" maxlength="20"/>
  </div>
  <div>
    <input type="hidden" name="mode" value="stageTwo">
    <input type="hidden" name="submitCounter" value="$submitCounter">
  </div>
  <div class="buttonarea">    
    <input type="submit" name="submit" value="Retrieve vehicle data"/>
  </div>
  </fieldset>
</form>

EOUSERFORMSTR;
  echo $userform_str;
  site_footer();
  return;
}


function validStateTagInfo() {
/* Verifies that the user supplied both a tag number and
state name. Also, verifies that the supplied string values
are of appropriate length and content. Also, this function
will assign appropriately the global values for $tag and
$state.

This function needs to have the $tag, $state values backslashed
appropriately for possible insertion into database before return to
main program.
*/

  global $tag, $state;
  
  if ( isset($_POST['submit']) AND (($_POST['submit'] == "Edit vehicle data")
      OR ($_POST['submit'] == "Retrieve vehicle data")) ) {
      
    // Initialize $tag and $state.
    if ( isset($_POST['tag']) ) {
      $tag = $_POST['tag'];
    } else {
      $tag = "";
    }
    if ( isset($_POST['state']) ) {
      $state = $_POST['state'];
    } else {
      $state = "";
    }
    
    // If magic quotes is on I'll stripslashes.
    if ( get_magic_quotes_gpc() ) {
      $tag = stripslashes($tag);
      $state = stripslashes($state);
    }
    
    // Trim white space.
    $tag = trim($tag);
    $state = trim($state);
      
    // Test the values and return truth.
    if ( strlen($state) > 12 || strlen($tag) > 20 ) { return false; }
    if ( strlen($state) < 1 || strlen($tag) < 1 ) { return false; }
    if ( !ctype_alnum($tag)) { return false; }
    
    // addslashes
    $tag = addslashes($tag);
    $state = addslashes($state);

  } else {
    die('Script aborted #12580. -Programmer.');
  }
  
  return true;
}


function vehicleIsInTable() {
/* Indicates whether the vehicle whose tag and state are
available in the global $tag and $state are found in the
table. */

  global $tag, $state;
  
  $query = "SELECT id
            FROM vehicles
            WHERE tag = '$tag' AND state = '$state'";
  $result = mysql_query($query);
  
  if (!$result) {
    die('Query failed. Err: 880037. -Programmer.');
  }

  if ( mysql_num_rows($result) < 1) {
    return false;
  } else {
    return true;
  }
}


function validateSave() {
/* This function takes the data which was collected by
the update form, validates it and saves it. Also,
it will set $status_message.
Assumption: A record containing the tag and State for this
vehicle already exists. Assumption: $tag and $state are
global variables which contain valid values. */

  // $isAnomaly - whether any form string is too long
  $isAnomaly = false;

  // Have required fields been filled out?
  $requireMet = true;
  
  global $status_message;
  
  // All form variables are global.
  global $vin, $tag, $state, $title, $cost, $year, $make, $model, $dateOfPurchase;
  global $bodyNumber, $transmissionSN, $engineSN, $knownAs, $dateOfRemoval, $isInFleet;
  
  if ( isset($_POST['submit']) and $_POST['submit'] == "Edit vehicle data" ) {

    // Transfer POSTS to regular vars
    if ( isset($_POST['vin']) ) {
      $vin = $_POST['vin'];
    } else {
      $vin = "";
    }
    if ( isset($_POST['title']) ) {
      $title = $_POST['title'];
    } else {
      $title = "";
    }
    if ( isset($_POST['cost']) ) {
      $cost = $_POST['cost'];
    } else {
      $cost = "";
    }
    if ( isset($_POST['year']) ) {
      $year = $_POST['year'];
    } else {
      $year = "";
    }
    if ( isset($_POST['make']) ) {
      $make = $_POST['make'];
    } else {
      $make = "";
    }
    if ( isset($_POST['model']) ) {
      $model = $_POST['model'];
    } else {
      $model = "";
    }
    if ( isset($_POST['dateOfPurchase']) ) {
      $dateOfPurchase = $_POST['dateOfPurchase'];
    } else {
      $dateOfPurchase = "";
    }
    if ( isset($_POST['bodyNumber']) ) {
      $bodyNumber = $_POST['bodyNumber'];
    } else {
      $bodyNumber = "";
    }
    if ( isset($_POST['transmissionSN']) ) {
      $transmissionSN = $_POST['transmissionSN'];
    } else {
      $transmissionSN = "";
    }
    if ( isset($_POST['engineSN']) ) {
      $engineSN = $_POST['engineSN'];
    } else {
      $engineSN = "";
    }
    if ( isset($_POST['knownAs']) ) {
      $knownAs = $_POST['knownAs'];
    } else {
      $knownAs = "";
    }
    if ( isset($_POST['dateOfRemoval']) ) {
      $dateOfRemoval = $_POST['dateOfRemoval'];
    } else {
      $dateOfRemoval = "";
    }
    if ( isset($_POST['isInFleet']) ) {
      $isInFleet = $_POST['isInFleet'];
    } else {
      $isInFleet = "";
    }


    // NOTES:
    // Data being placed in a database needs to have characters
    // in the following set escaped: {',",\,NUL}. That is why
    // one way or another we will escape them.
    // The PHP directive  magic_quotes_gpc is on by default,
    // and it essentially runs addslashes() on all GET, POST,
    // and COOKIE data. Do not use addslashes() on strings
    // that have already been escaped with magic_quotes_gpc
    // as you'll then do double escaping. The function
    // get_magic_quotes_gpc() may come in handy for checking
    // this. The following code takes care of this problem:
    if ( !get_magic_quotes_gpc() ) {
      $vin = addslashes($vin);
      $tag = addslashes($tag);
      $state = addslashes($state);
      $title = addslashes($title);
      $cost = addslashes($cost);
      $year = addslashes($year);
      $make = addslashes($make);
      $model = addslashes($model);
      $dateOfPurchase = addslashes($dateOfPurchase);
      $bodyNumber = addslashes($bodyNumber);
      $transmissionSN = addslashes($transmissionSN);
      $engineSN = addslashes($engineSN);
      $knownAs = addslashes($knownAs);
      $dateOfRemoval = addslashes($dateOfRemoval);
      $isInFleet = addslashes($isInFleet);
    }

    // Trim white space.
    $vin = trim($vin);
    $title = trim($title);
    $cost = trim($cost);
    $year = trim($year);
    $make = trim($make);
    $model = trim($model);
    $dateOfPurchase = trim($dateOfPurchase);
    $bodyNumber = trim($bodyNumber);
    $transmissionSN = trim($transmissionSN);
    $engineSN = trim($engineSN);
    $knownAs = trim($knownAs);
    $dateOfRemoval = trim($dateOfRemoval);
    $isInFleet = trim($isInFleet);

    // Verify string length and deal with anomalies
  
    // The string length should not be longer than the
    // MAXLENGTH of the FORM field unless slashes were added.
    // Therefore make allowance for this for strings which may
    // have slashes added.
    if ( strlen($vin) > 30 ) { $isAnomaly = true; }
    if ( strlen($tag) > 12 ) { $isAnomaly = true; }
    if ( strlen($state) > 20 ) { $isAnomaly = true; }
    if ( strlen($title) > 14 ) { $isAnomaly = true; }
    if ( strlen($cost) > 13 ) { $isAnomaly = true; }
    if ( strlen($year) > 4 ) { $isAnomaly = true; }
    if ( strlen($make) > 8 ) { $isAnomaly = true; }
    if ( strlen($model) > 15 ) { $isAnomaly = true; }
    if ( strlen($dateOfPurchase) > 10 ) { $isAnomaly = true; }
    if ( strlen($bodyNumber) > 30 ) { $isAnomaly = true; }
    if ( strlen($transmissionSN) > 30 ) { $isAnomaly = true; }
    if ( strlen($engineSN) > 30 ) { $isAnomaly = true; }
    if ( strlen($knownAs) > 10 ) { $isAnomaly = true; }
    if ( strlen($dateOfRemoval) > 10 ) { $isAnomaly = true; }
    if ( strlen($isInFleet) > 1 ) { $isAnomaly = true; }
    
    // I need to validate the $dateOfPurchase and $dateOfRemoval
    // strings and set $isAnomaly appropriately.
    if ( strlen($dateOfPurchase) > 0 and !isDate($dateOfPurchase) ) { $isAnomaly = true; }
    if ( strlen($dateOfRemoval)  > 0 and !isDate($dateOfRemoval)  ) { $isAnomaly = true; }
    
    // Make sure $year is numeric
    if ( strlen($year) > 0 and !is_numeric($year)) {$isAnomaly = true; }
    
    // Make sure $cost is numeric
    if ( strlen($cost) > 0 and !is_numeric($cost)) {$isAnomaly = true; }
    
    // Make sure $isInFleet is numeric
    if ( strlen($isInFleet) > 0 and !is_numeric($isInFleet)) {$isAnomaly = true; }
    
    // $isInFleet can only be empty string, 0 or 1.
    if ( strlen($isInFleet) > 0 and $isInFleet > 1 ) {$isAnomaly = true; }

    // Find out if required fields were filled out
    if ( strlen($vin) < 1 || strlen($tag) < 1 || strlen($state) < 1 ) {
      $requireMet = false;
    }


    // If required fields were inputed then update database.
    if ( $requireMet == true and $isAnomaly == false ) {

      // Send data to db
      $query = "UPDATE vehicles
                SET vin = '$vin',
                    title = '$title',
                    cost = '$cost',
                    year = '$year',
                    make = '$make',
                    model = '$model',
                    dateOfPurchase = STR_TO_DATE('$dateOfPurchase','%m/%d/%Y'),
                    bodyNumber = '$bodyNumber',
                    transmissionSN = '$transmissionSN',
                    engineSN = '$engineSN',
                    knownAs = '$knownAs',
                    dateOfRemoval = STR_TO_DATE('$dateOfRemoval','%m/%d/%Y'),
                    isInFleet = '$isInFleet'
                WHERE tag = '$tag' AND state = '$state'";
      $result = mysql_query($query);
      if (!$result || mysql_affected_rows() < 1) {
        $status_message = 'Problem with user data entry';
      } else {
        $status_message = 'Successfully edited user data';
      }
    } elseif ( $requireMet == false ) {
      $status_message =  'Error -- you did not complete a required field.';
      if ( $isAnomaly == true ) {
        $status_message .= ' Also, one or more fields was ' .
          'supplied with non-conforming data. No data was saved.';
      }
    } elseif ( $isAnomaly == true ) {
      $status_message = 'One or more fields was ' .
        'supplied with non-conforming data. No data was saved.';
    }
  } else {
    die('Script aborted #7700. -Programmer.');
  }
  
  return;
}




function reloadDataVars() {
/* Puts the data from an existent vehicle record into the
variables which will populate an update form. It is assumed
that $tag and $state correspond to a vehicle record which
exists already. Also, this function makes sure that all form
variables get initialized with values and defined as global.
Otherwise, it aborts.
*/

  // All form variables are global.
  global $vin, $tag, $state, $title, $cost, $year, $make, $model, $dateOfPurchase;
  global $bodyNumber, $transmissionSN, $engineSN, $knownAs, $dateOfRemoval, $isInFleet;
  
  $query = "SELECT vin, title, cost, year, make, model, DATE_FORMAT(dateOfPurchase, '%m/%d/%Y'),
bodyNumber, transmissionSN, engineSN, knownAs, DATE_FORMAT(dateOfRemoval, '%m/%d/%Y'), isInFleet
            FROM vehicles
            WHERE tag = '$tag' AND state = '$state'";
  $result = mysql_query($query);
  if (!$result || mysql_num_rows($result) < 1) {
    die('Error 56801. -Programmer.');
  } else {
    $user_array = mysql_fetch_array($result);
    
    $vin = $user_array['vin'];
    $title = $user_array['title'];
    $cost = $user_array['cost'];
    $year = $user_array['year'];
    $make = $user_array['make'];
    $model = $user_array['model'];
    $dateOfPurchase = $user_array['DATE_FORMAT(dateOfPurchase, \'%m/%d/%Y\')'];
    $bodyNumber = $user_array['bodyNumber'];
    $transmissionSN = $user_array['transmissionSN'];
    $engineSN = $user_array['engineSN'];
    $knownAs = $user_array['knownAs'];
    $dateOfRemoval = $user_array['DATE_FORMAT(dateOfRemoval, \'%m/%d/%Y\')'];
    $isInFleet = $user_array['isInFleet'];
    
    // Text and Textarea fields have had backslashes
    // added to escape single quotes ('), double
    // quotes ("), backslashes (\) and NULL before
    // insertion into the database. Therefore, we must
    // undo this before displaying these strings.
    $vin = stripslashes($vin);
    $title = stripslashes($title);
    $make = stripslashes($make);
    $model = stripslashes($model);
    $bodyNumber = stripslashes($bodyNumber);
    $transmissionSN = stripslashes($transmissionSN);
    $engineSN = stripslashes($engineSN);
    $knownAs = stripslashes($knownAs);
    // Even though $tag and $state were not
    // retrieved
    $tag = stripslashes($tag);
    $state = stripslashes($state);
  }
  
  return;
}


function createNewRecord() {
/* Inserts a new vehicle record populating it with the
valid tag and state strings supplied by the user. */

  global $tag, $state;
  
  $query = "INSERT INTO vehicles (tag, state)
            VALUES ('$tag', '$state')";
  $result = mysql_query($query);
  if (!$result || mysql_affected_rows() < 1) {
    die('Error adding new record. 00099. -Programmer.');
  } else {
    return;
  }
}


function presentUpdateForm() {
/* Presents the form for supplying (or changing) field
values for an existing vehicle record. Also, presents
the $status_message. The $mode, $tag and $state
global variables must contain valid values (which will
further more be passed along when the form is submitted.)
The $tag and $state values can't be changed here (but
are displayed.)
*/

  global $mode, $status_message, $submitCounter;

  // All form variables are global.
  global $vin, $tag, $state, $title, $cost, $year, $make, $model, $dateOfPurchase;
  global $bodyNumber, $transmissionSN, $engineSN, $knownAs, $dateOfRemoval, $isInFleet;
  
  // mode must be valid
  $modeIsNotValid = true;
  if ( $mode == 'stageOne') { $modeIsNotValid = false; }
  if ( $mode == 'stageTwo') { $modeIsNotValid = false; }
  if ( $mode == 'stageThree') { $modeIsNotValid = false; }
  if ($modeIsNotValid) { die('Error 11102. -Programmer.'); }
  
  // The main program has a more rigorous validation test.
  if ((strlen($state) < 1) OR (strlen($tag) < 1)) {
    die('Error 22001. -Programmer.');
  }

  // Construct isInFleet checkbox control
  if ( $isInFleet == "1" ) {
    $isInFleetBox =
      '  <div><input type="checkbox" name="isInFleet" id="isInFleet" value="1" checked="checked"/>' .
      '   <label for="isInFleet">Yes, this vehicle is in our company fleet.</label></div>';
  } else {
    $isInFleetBox =
      '  <div><input type="checkbox" name="isInFleet" id="isInFleet" value="1"/>' .
      '   <label for="isInFleet">Yes, this vehicle is in our company fleet.</label></div>';
  }


  /*
  Construct form:
  */

  site_header('Add Company Vehicle');

  // Superglobals don't work with heredoc
  $php_self = $_SERVER['PHP_SELF'];

  if ( !isset($status_message) || $status_message == "" ) {
    $message_str = "";
  } else {
    $message_str = "<p class=\"errmsg\">$status_message</p>";
  }

  $userform_str = <<<EOUSERFORMSTR

$message_str

<p>This page allows you to update a company vehicle record in the database table
for company vehicles. This table is used by other scripts (including
the ones for maintenance.)</p>

<p>Tag: $tag<br/>
State: $state</p>

<form action="$php_self" method="post" class="loginform">
  <fieldset>
  <legend>Form:</legend>
  <div>
    <label for="vin" class="fixedwidth">vin <span class="formcomment">*Required</span></label>
    <input type="text" name="vin" id="vin" value="$vin" size="20" maxlength="30"/>
  </div>
  <div>
    <label for="title" class="fixedwidth">title</label>
    <input type="text" name="title" id="title" value="$title" size="9" maxlength="14"/>
  </div>
  <div>
    <label for="cost" class="fixedwidth">cost (incl. taxes. ie 65000.00)</label>
    <input type="text" name="cost" id="cost" value="$cost" size="8" maxlength="12"/>
  </div>
  <div>
    <label for="year" class="fixedwidth">year (ccyy)</label>
    <input type="text" name="year" id="year" value="$year" size="4" maxlength="4"/>
  </div>
  <div>
    <label for="make" class="fixedwidth">make (abreviated)</label>
    <input type="text" name="make" id="make" value="$make" size="4" maxlength="8"/>
  </div>
  <div>
    <label for="model" class="fixedwidth">model (per MVA title)</label>
    <input type="text" name="model" id="model" value="$model" size="15" maxlength="15"/>
  </div>
  <div>
    <label for="dateOfPurchase" class="fixedwidth">purchase date (mm/dd/ccyy)</label>
    <input type="text" name="dateOfPurchase" id="dateOfPurchase" value="$dateOfPurchase" size="10" maxlength="10"/>
  </div>
  <div>
    <label for="bodyNumber" class="fixedwidth">body number</label>
    <input type="text" name="bodyNumber" id="bodyNumber" value="$bodyNumber" size="7" maxlength="30"/>
  </div>
  <div>
    <label for="transmissionSN" class="fixedwidth">transmission s/n</label>
    <input type="text" name="transmissionSN" id="transmissionSN" value="$transmissionSN" size="11" maxlength="30"/>
  </div>
  <div>
    <label for="engineSN" class="fixedwidth">engine s/n</label>
    <input type="text" name="engineSN" id="engineSN" value="$engineSN" size="15" maxlength="30"/>
  </div>
  <div>
    <label for="knownAs" class="fixedwidth">known as (unit # - i.e. 292)</label>
    <input type="text" name="knownAs" id="knownAs" value="$knownAs" size="6" maxlength="10"/>
  </div>
$isInFleetBox
  <div>
    <label for="dateOfRemoval" class="fixedwidth">removal date (mm/dd/ccyy)</label>
    <input type="text" name="dateOfRemoval" id="dateOfRemoval" value="$dateOfRemoval" size="10" maxlength="10"/>
  </div>
  <div>
    <input type="hidden" name="mode" value="stageThree">
    <input type="hidden" name="submitCounter" value="$submitCounter">
    <input type="hidden" name="tag" value="$tag">
    <input type="hidden" name="state" value="$state">
  </div>
  <div class="buttonarea">    
    <input type="submit" name="submit" value="Edit vehicle data"/>
  </div>
  </fieldset>
</form>

EOUSERFORMSTR;
  echo $userform_str;

  site_footer();
  
  return;

}

?>