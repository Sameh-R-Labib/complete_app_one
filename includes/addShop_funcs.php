<?php
error_reporting(E_ALL);
ini_set("display_errors", 1);

/* This file is for inclusion in addShop.php. */



function presentBusinessNameForm() {
/*
Assumptions:
  1. Valid user.
  2. This form is being presented for one of the following reasons:
       A. The main script has just completed its first iteration.
       B. The main script has just completed an iteration where
          it has determined that the business name string collected
          from the previous form submission was invalid.

Results To Expect:
  1. Global $status_message string is used for displaying a possible
     message generated by the main program.
  2. Pass the stageTwo value for mode as a hidden form field.
  3. Pass the global $submitCounter value through as a hidden field in
     the form.
  4. Present an error message if $status_message is not
     an empty string.
  5. Present the appropriate forms and fields which allow the user to
     specify a business name for the new or existing shop relevant to
     what we already have in the database. The form will encourage and
     assist the user so that creation of duplicate store records will
     be avoided.
*/

  global $status_message, $submitCounter;


  /*
  Construct form:
  */

  site_header('Add Shop');

  // Superglobals don't work with heredoc
  $php_self = $_SERVER['PHP_SELF'];

  if ( !isset($status_message) || $status_message == "" ) {
    $message_str = "";
  } else {
    $message_str = "<p class=\"errmsg\">$status_message</p>";
  }

  $userform_str = <<<EOUSERFORMSTR

$message_str

<p>This page allows you to update a shop record in the database table
for shops. This table is used by other scripts (including
the ones for maintenance.) Note that if you specify a business name
for a shop
which is not found in the shops table then a new record will be created.
Please, make sure that the business name you specify is spelled
correctly so as to avoid having multiple records which actually refer to
the same shop.</p>

<form action="$php_self" method="post" class="loginform">
  <fieldset>
  <legend>Specify a Shop: <span class="formcomment">*All fields required</span></legend>
  <div>
    <label for="businessName" class="fixedwidth">business name</label>
    <input type="text" name="businessName" id="businessName" value="" size="24" maxlength="30"/>
  </div>
  <div>
    <input type="hidden" name="mode" value="stageTwo">
    <input type="hidden" name="submitCounter" value="$submitCounter">
  </div>
  <div class="buttonarea">    
    <input type="submit" name="submit" value="Retrieve shop data"/>
  </div>
  </fieldset>
</form>

EOUSERFORMSTR;
  echo $userform_str;
  site_footer();
  return;
}



function validBusinessName() {
/*
Verifies that the user supplied a business name. Also, verifies that this
string is not too long and has no illegal characters. Also, an appropriate
value for the business name variable will be passed back as a global
variable. The function's return value is a boolean indicating whether the
business name string is valid.

This function needs to have the $businessName value backslashed
appropriately for possible insertion into database before return
to main program.
*/

  global $businessName;
  
  if ( isset($_POST['submit']) AND (($_POST['submit'] == "Edit shop data")
      OR ($_POST['submit'] == "Retrieve shop data")) ) {
      
    // Initialize $businessName.
    if ( isset($_POST['businessName']) ) {
      $businessName = $_POST['businessName'];
    } else {
      $businessName = "";
    }

    // If magic quotes is on I'll stripslashes.
    if ( get_magic_quotes_gpc() ) {
      $businessName = stripslashes($businessName);
    }

    // Trim white space.
    $businessName = trim($businessName);

    // Test the values and return truth.
    if ( strlen($businessName) > 30 ) { return false; }
    if (strlen($businessName) < 1 ) { return false; }

    // addslashes
    $businessName = addslashes($businessName);


  } else {
    die('Script aborted #12580. -Programmer.');
  }
  
  return true;
}



function businessInTable() {
/*
Indicates whether the shop's business name record already exists in the
database shops table. Return value is a boolean.
*/

  global $businessName;

  $query = "SELECT id
            FROM shops
            WHERE businessName = '$businessName'";
  $result = mysql_query($query);
  
  if (!$result) {
    die('Query failed. Err: 880037. -Programmer.');
  }

  if ( mysql_num_rows($result) < 1) {
    return false;
  } else {
    return true;
  }
}



function validateSave() {
/*
This function takes the data which was collected by the update form,
validates it and saves it. Also, it will set $status_message.
Assumption: A record containing the business name for this
shop already exists. Assumption: The business name variable is a
global variable which contain valid value.
*/

  // $isAnomaly - whether any form string is too long
  $isAnomaly = false;

  // Have required fields been filled out?
  $requireMet = true;
  
  global $status_message;
  
  // All form variables are global.
  global $businessName, $phone1Area, $phone1First3, $phone1Last4;
  global $phone1Descript, $phone2Area, $phone2First3, $phone2Last4;
  global $phone2Descript, $faxArea, $faxFirst3, $faxLast4, $streetAd1;
  global $streetAd2, $city, $state, $zip, $comment, $person1;
  global $person1Descript, $person2, $person2Descript, $person3;
  global $person3Descript;

  if ( isset($_POST['submit']) and $_POST['submit'] == "Edit shop data" ) {

    // Transfer POSTS to regular vars
    if ( isset($_POST['phone1Area']) ) {
      $phone1Area = $_POST['phone1Area'];
    } else {
      $phone1Area = "";
    }
    if ( isset($_POST['phone1First3']) ) {
      $phone1First3 = $_POST['phone1First3'];
    } else {
      $phone1First3 = "";
    }
    if ( isset($_POST['phone1Last4']) ) {
      $phone1Last4 = $_POST['phone1Last4'];
    } else {
      $phone1Last4 = "";
    }
    if ( isset($_POST['phone1Descript']) ) {
      $phone1Descript = $_POST['phone1Descript'];
    } else {
      $phone1Descript = "";
    }
    if ( isset($_POST['phone2Area']) ) {
      $phone2Area = $_POST['phone2Area'];
    } else {
      $phone2Area = "";
    }
    if ( isset($_POST['phone2First3']) ) {
      $phone2First3 = $_POST['phone2First3'];
    } else {
      $phone2First3 = "";
    }
    if ( isset($_POST['phone2Last4']) ) {
      $phone2Last4 = $_POST['phone2Last4'];
    } else {
      $phone2Last4 = "";
    }
    if ( isset($_POST['phone2Descript']) ) {
      $phone2Descript = $_POST['phone2Descript'];
    } else {
      $phone2Descript = "";
    }
    if ( isset($_POST['faxArea']) ) {
      $faxArea = $_POST['faxArea'];
    } else {
      $faxArea = "";
    }
    if ( isset($_POST['faxFirst3']) ) {
      $faxFirst3 = $_POST['faxFirst3'];
    } else {
      $faxFirst3 = "";
    }
    if ( isset($_POST['faxLast4']) ) {
      $faxLast4 = $_POST['faxLast4'];
    } else {
      $faxLast4 = "";
    }
    if ( isset($_POST['streetAd1']) ) {
      $streetAd1 = $_POST['streetAd1'];
    } else {
      $streetAd1 = "";
    }
    if ( isset($_POST['streetAd2']) ) {
      $streetAd2 = $_POST['streetAd2'];
    } else {
      $streetAd2 = "";
    }
    if ( isset($_POST['city']) ) {
      $city = $_POST['city'];
    } else {
      $city = "";
    }
    if ( isset($_POST['state']) ) {
      $state = $_POST['state'];
    } else {
      $state = "";
    }
    if ( isset($_POST['zip']) ) {
      $zip = $_POST['zip'];
    } else {
      $zip = "";
    }
    if ( isset($_POST['comment']) ) {
      $comment = $_POST['comment'];
    } else {
      $comment = "";
    }
    if ( isset($_POST['person1']) ) {
      $person1 = $_POST['person1'];
    } else {
      $person1 = "";
    }
    if ( isset($_POST['person1Descript']) ) {
      $person1Descript = $_POST['person1Descript'];
    } else {
      $person1Descript = "";
    }
    if ( isset($_POST['person2']) ) {
      $person2 = $_POST['person2'];
    } else {
      $person2 = "";
    }
    if ( isset($_POST['person2Descript']) ) {
      $person2Descript = $_POST['person2Descript'];
    } else {
      $person2Descript = "";
    }
    if ( isset($_POST['person3']) ) {
      $person3 = $_POST['person3'];
    } else {
      $person3 = "";
    }
    if ( isset($_POST['person3Descript']) ) {
      $person3Descript = $_POST['person3Descript'];
    } else {
      $person3Descript = "";
    }
    
    // NOTES:
    // Data being placed in a database needs to have characters
    // in the following set escaped: {',",\,NUL}. That is why
    // one way or another we will escape them.
    // The PHP directive  magic_quotes_gpc is on by default,
    // and it essentially runs addslashes() on all GET, POST,
    // and COOKIE data. Do not use addslashes() on strings
    // that have already been escaped with magic_quotes_gpc
    // as you'll then do double escaping. The function
    // get_magic_quotes_gpc() may come in handy for checking
    // this. The following code takes care of this problem:
    if ( !get_magic_quotes_gpc() ) {
      $phone1Area = addslashes($phone1Area);
      $phone1First3 = addslashes($phone1First3);
      $phone1Last4 = addslashes($phone1Last4);
      $phone1Descript = addslashes($phone1Descript);
      $phone2Area = addslashes($phone2Area);
      $phone2First3 = addslashes($phone2First3);
      $phone2Last4 = addslashes($phone2Last4);
      $phone2Descript = addslashes($phone2Descript);
      $faxArea = addslashes($faxArea);
      $faxFirst3 = addslashes($faxFirst3);
      $faxLast4 = addslashes($faxLast4);
      $streetAd1 = addslashes($streetAd1);
      $streetAd2 = addslashes($streetAd2);
      $city = addslashes($city);
      $state = addslashes($state);
      $zip = addslashes($zip);
      $comment = addslashes($comment);
      $person1 = addslashes($person1);
      $person1Descript = addslashes($person1Descript);
      $person2 = addslashes($person2);
      $person2Descript = addslashes($person2Descript);
      $person3 = addslashes($person3);
      $person3Descript = addslashes($person3Descript);
    }

    // Trim white space.
    $phone1Area = trim($phone1Area);
    $phone1First3 = trim($phone1First3);
    $phone1Last4 = trim($phone1Last4);
    $phone1Descript = trim($phone1Descript);
    $phone2Area = trim($phone2Area);
    $phone2First3 = trim($phone2First3);
    $phone2Last4 = trim($phone2Last4);
    $phone2Descript = trim($phone2Descript);
    $faxArea = trim($faxArea);
    $faxFirst3 = trim($faxFirst3);
    $faxLast4 = trim($faxLast4);
    $streetAd1 = trim($streetAd1);
    $streetAd2 = trim($streetAd2);
    $city = trim($city);
    $state = trim($state);
    $zip = trim($zip);
    $comment = trim($comment);
    $person1 = trim($person1);
    $person1Descript = trim($person1Descript);
    $person2 = trim($person2);
    $person2Descript = trim($person2Descript);
    $person3 = trim($person3);
    $person3Descript = trim($person3Descript);

    // Verify string length and deal with anomalies
  
    // The string length should not be longer than the
    // MAXLENGTH of the FORM field unless slashes were added.
    // Therefore make allowance for this for strings which may
    // have slashes added.
    if ( strlen($phone1Area) > 3 ) { $isAnomaly = true; }
    if ( strlen($phone1First3) > 3 ) { $isAnomaly = true; }
    if ( strlen($phone1Last4) > 4 ) { $isAnomaly = true; }
    if ( strlen($phone1Descript) > 36 ) { $isAnomaly = true; }
    if ( strlen($phone2Area) > 3 ) { $isAnomaly = true; }
    if ( strlen($phone2First3) > 3 ) { $isAnomaly = true; }
    if ( strlen($phone2Last4) > 4 ) { $isAnomaly = true; }
    if ( strlen($phone2Descript) > 36 ) { $isAnomaly = true; }
    if ( strlen($faxArea) > 3 ) { $isAnomaly = true; }
    if ( strlen($faxFirst3) > 3 ) { $isAnomaly = true; }
    if ( strlen($faxLast4) > 4 ) { $isAnomaly = true; }
    if ( strlen($streetAd1) > 38 ) { $isAnomaly = true; }
    if ( strlen($streetAd2) > 38 ) { $isAnomaly = true; }
    if ( strlen($city) > 20 ) { $isAnomaly = true; }
    if ( strlen($state) > 20 ) { $isAnomaly = true; }
    if ( strlen($zip) > 10 ) { $isAnomaly = true; }
    if ( strlen($comment) > 92 ) { $isAnomaly = true; }
    if ( strlen($person1) > 30 ) { $isAnomaly = true; }
    if ( strlen($person1Descript) > 36 ) { $isAnomaly = true; }
    if ( strlen($person2) > 30 ) { $isAnomaly = true; }
    if ( strlen($person2Descript) > 36 ) { $isAnomaly = true; }
    if ( strlen($person3) > 30 ) { $isAnomaly = true; }
    if ( strlen($person3Descript) > 36 ) { $isAnomaly = true; }
    
    // If my data set has dates or other specific types then verify
    // those.
    
    // Verify numeric data is numeric.
    if ( strlen($phone1Area) > 0 and !is_numeric($phone1Area)) {$isAnomaly = true; }
    if ( strlen($phone1First3) > 0 and !is_numeric($phone1First3)) {$isAnomaly = true; }
    if ( strlen($phone1Last4) > 0 and !is_numeric($phone1Last4)) {$isAnomaly = true; }
    if ( strlen($phone2Area) > 0 and !is_numeric($phone2Area)) {$isAnomaly = true; }
    if ( strlen($phone2First3) > 0 and !is_numeric($phone2First3)) {$isAnomaly = true; }
    if ( strlen($phone2Last4) > 0 and !is_numeric($phone2Last4)) {$isAnomaly = true; }
    if ( strlen($faxArea) > 0 and !is_numeric($faxArea)) {$isAnomaly = true; }
    if ( strlen($faxFirst3) > 0 and !is_numeric($faxFirst3)) {$isAnomaly = true; }
    if ( strlen($faxLast4) > 0 and !is_numeric($faxLast4)) {$isAnomaly = true; }
    
    // Verify alpha numeric data.

    // Find out if required fields were filled out
    if ( strlen($businessName) < 1 || strlen($phone1Area) < 1 || strlen($phone1Last4) < 1 ) {
      $requireMet = false;
    }

    // If required fields were inputed then update database.
    if ( $requireMet == true and $isAnomaly == false ) {
    $query = "UPDATE shops
                SET phone1Area = '$phone1Area',
                    phone1First3 = '$phone1First3',
                    phone1Last4 = '$phone1Last4',
                    phone1Descript = '$phone1Descript',
                    phone2Area = '$phone2Area',
                    phone2First3 = '$phone2First3',
                    phone2Last4 = '$phone2Last4',
                    phone2Descript = '$phone2Descript',
                    faxArea = '$faxArea',
                    faxFirst3 = '$faxFirst3',
                    faxLast4 = '$faxLast4',
                    streetAd1 = '$streetAd1',
                    streetAd2 = '$streetAd2',
                    city = '$city',
                    state = '$state',
                    zip = '$zip',
                    comment = '$comment',
                    person1 = '$person1',
                    person1Descript = '$person1Descript',
                    person2 = '$person2',
                    person2Descript = '$person2Descript',
                    person3 = '$person3',
                    person3Descript = '$person3Descript'
                WHERE businessName = '$businessName'";
      $result = mysql_query($query);
      if (!$result || mysql_affected_rows() < 1) {
        $status_message = 'Problem with user data entry';
      } else {
        $status_message = 'Successfully edited user data';
      }
    } elseif ( $requireMet == false ) {
      $status_message =  'Error -- you did not complete a required field.';
      if ( $isAnomaly == true ) {
        $status_message .= ' Also, one or more fields was ' .
          'supplied with non-conforming data. No data was saved.';
      }
    } elseif ( $isAnomaly == true ) {
      $status_message = 'One or more fields was ' .
        'supplied with non-conforming data. No data was saved.';
    }
  } else {
    die('Script aborted #7700. -Programmer.');
  }
  
  return;
}



function reloadDataVars() {
/*
Puts the data from an existent shop record into the
variables which will populate an update form. It is assumed
that the business name correspons to a shop record which
exists already. Also, this function makes sure that all form
variables get initialized with values and defined as global.
Otherwise, it aborts.
*/

  // All form variables are global.
  global $businessName, $phone1Area, $phone1First3, $phone1Last4;
  global $phone1Descript, $phone2Area, $phone2First3, $phone2Last4;
  global $phone2Descript, $faxArea, $faxFirst3, $faxLast4, $streetAd1;
  global $streetAd2, $city, $state, $zip, $comment, $person1;
  global $person1Descript, $person2, $person2Descript, $person3;
  global $person3Descript;
  
  $query = "SELECT phone1Area, phone1First3, phone1Last4, phone1Descript,
                   phone2Area, phone2First3, phone2Last4, phone2Descript,
                   faxArea, faxFirst3, faxLast4,
                   streetAd1, streetAd2, city, state, zip,
                   comment,
                   person1, person1Descript,
                   person2, person2Descript,
                   person3, person3Descript 
            FROM shops
            WHERE businessName = '$businessName'";
  $result = mysql_query($query);
  if (!$result || mysql_num_rows($result) < 1) {
    die('Error 56801. -Programmer.');
  } else {
    $user_array = mysql_fetch_array($result);
    
    $phone1Area = $user_array['phone1Area'];
    $phone1First3 = $user_array['phone1First3'];
    $phone1Last4 = $user_array['phone1Last4'];
    $phone1Descript = $user_array['phone1Descript'];
    $phone2Area = $user_array['phone2Area'];
    $phone2First3 = $user_array['phone2First3'];
    $phone2Last4 = $user_array['phone2Last4'];
    $phone2Descript = $user_array['phone2Descript'];
    $faxArea = $user_array['faxArea'];
    $faxFirst3 = $user_array['faxFirst3'];
    $faxLast4 = $user_array['faxLast4'];
    $streetAd1 = $user_array['streetAd1'];
    $streetAd2 = $user_array['streetAd2'];
    $city = $user_array['city'];
    $state = $user_array['state'];
    $zip = $user_array['zip'];
    $comment = $user_array['comment'];
    $person1 = $user_array['person1'];
    $person1Descript = $user_array['person1Descript'];
    $person2 = $user_array['person2'];
    $person2Descript = $user_array['person2Descript'];
    $person3 = $user_array['person3'];
    $person3Descript = $user_array['person3Descript'];
    
    // Text and Textarea fields have had backslashes
    // added to escape single quotes ('), double
    // quotes ("), backslashes (\) and NULL before
    // insertion into the database. Therefore, we must
    // undo this before displaying these strings.
    $phone1Area = stripslashes($phone1Area);
    $phone1First3 = stripslashes($phone1First3);
    $phone1Last4 = stripslashes($phone1Last4);
    $phone1Descript = stripslashes($phone1Descript);
    $phone2Area = stripslashes($phone2Area);
    $phone2First3 = stripslashes($phone2First3);
    $phone2Last4 = stripslashes($phone2Last4);
    $phone2Descript = stripslashes($phone2Descript);
    $faxArea = stripslashes($faxArea);
    $faxFirst3 = stripslashes($faxFirst3);
    $faxLast4 = stripslashes($faxLast4);
    $streetAd1 = stripslashes($streetAd1);
    $streetAd2 = stripslashes($streetAd2);
    $city = stripslashes($city);
    $state = stripslashes($state);
    $zip = stripslashes($zip);
    $comment = stripslashes($comment);
    $person1 = stripslashes($person1);
    $person1Descript = stripslashes($person1Descript);
    $person2 = stripslashes($person2);
    $person2Descript = stripslashes($person2Descript);
    $person3 = stripslashes($person3);
    $person3Descript = stripslashes($person3Descript);
    
    // Even though $businessName was not
    // retrieved
    $businessName = stripslashes($businessName);
  }
  return;
}


function createNewRecord() {
/*
Inserts a new shop record populating it with the
valid business name string supplied by the user.
*/

 global $businessName;
 
 $query = "INSERT INTO shops (businessName)
            VALUES ('$businessName')";
  $result = mysql_query($query);
  if (!$result || mysql_affected_rows() < 1) {
    die('Error adding new record. 00099. -Programmer.');
  } else {
    return;
  }
}


function presentUpdateForm() {
/*
Presents the form for supplying (or changing) field
values for an existing shop record. Also, presents
the $status_message. $mode is validated and the business name
global variable has already been validated in the main program.
The business name will be passed along when the form is submitted.
The business name value won't be changed here (but
will be displayed by the form.) The form is hardwired to pass a
hidden value of stageThree for the mode. Also, the
$submitCounter is handled appropriately.
*/

  global $mode, $status_message, $submitCounter;
  global $businessName, $phone1Area, $phone1First3, $phone1Last4;
  global $phone1Descript, $phone2Area, $phone2First3, $phone2Last4;
  global $phone2Descript, $faxArea, $faxFirst3, $faxLast4, $streetAd1;
  global $streetAd2, $city, $state, $zip, $comment, $person1;
  global $person1Descript, $person2, $person2Descript, $person3;
  global $person3Descript;

  // $mode must have a valid value.
  $modeIsNotValid = true;
  if ( $mode == 'stageOne') { $modeIsNotValid = false; }
  if ( $mode == 'stageTwo') { $modeIsNotValid = false; }
  if ( $mode == 'stageThree') { $modeIsNotValid = false; }
  if ($modeIsNotValid) { die('Error 11102. -Programmer.'); }


  /*
  Construct form:
  */

  site_header('Add Shop');

  // Superglobals don't work with heredoc
  $php_self = $_SERVER['PHP_SELF'];
  
  if ( !isset($status_message) || $status_message == "" ) {
    $message_str = "";
  } else {
    $message_str = "<p class=\"errmsg\">$status_message</p>";
  }
  $userform_str = <<<EOUSERFORMSTR

$message_str

<p>This form allows you to update a shop record. The database table
which will be updated is used by other scripts (including the ones
for maintenance.)</p>

<p>Business Name: $businessName</p>

<form action="$php_self" method="post" class="loginform">
  <fieldset>
  <legend>Form:</legend>
  <p><span class="formcomment">*The first phone number is required.</span></p>
  <div>
    <label for="phone1Area" class="fixedwidth">Phone 1</label>
    <input type="text" name="phone1Area" id="phone1Area" value="$phone1Area" size="3" maxlength="3"/> -
    <input type="text" name="phone1First3" id="phone1First3" value="$phone1First3" size="3" maxlength="3"/> -
    <input type="text" name="phone1Last4" id="phone1Last4" value="$phone1Last4" size="4" maxlength="4"/>
  </div>
  <div>
    <label for="phone1Descript" class="fixedwidth">Phone 1 description</label>
    <input type="text" name="phone1Descript" id="phone1Descript" value="$phone1Descript" size="20" maxlength="30"/>
  </div>
  <div>
    <label for="phone2Area" class="fixedwidth">Phone 2</label>
    <input type="text" name="phone2Area" id="phone2Area" value="$phone2Area" size="3" maxlength="3"/> -
    <input type="text" name="phone2First3" id="phone2First3" value="$phone2First3" size="3" maxlength="3"/> -
    <input type="text" name="phone2Last4" id="phone2Last4" value="$phone2Last4" size="4" maxlength="4"/>
  </div>
  <div>
    <label for="phone2Descript" class="fixedwidth">Phone 2 description</label>
    <input type="text" name="phone2Descript" id="phone2Descript" value="$phone2Descript" size="20" maxlength="30"/>
  </div>
  <div>
    <label for="faxArea" class="fixedwidth">Fax</label>
    <input type="text" name="faxArea" id="faxArea" value="$faxArea" size="3" maxlength="3"/> -
    <input type="text" name="faxFirst3" id="faxFirst3" value="$faxFirst3" size="3" maxlength="3"/> -
    <input type="text" name="faxLast4" id="faxLast4" value="$faxLast4" size="4" maxlength="4"/>
  </div>
   <div>
    <label for="streetAd1" class="fixedwidth">Street address line 1</label>
    <input type="text" name="streetAd1" id="streetAd1" value="$streetAd1" size="38" maxlength="38"/>
  </div>
  <div>
    <label for="streetAd2" class="fixedwidth">Street address line 2</label>
    <input type="text" name="streetAd2" id="streetAd2" value="$streetAd2" size="38" maxlength="38"/>
  </div>
  <div>
    <label for="city" class="fixedwidth">City</label>
    <input type="text" name="city" id="city" value="$city" size="20" maxlength="20"/>
  </div>
  <div>
    <label for="state" class="fixedwidth">State</label>
    <input type="text" name="state" id="state" value="$state" size="15" maxlength="20"/>
  </div>
  <div>
    <label for="zip" class="fixedwidth">Zip</label>
    <input type="text" name="zip" id="zip" value="$zip" size="10" maxlength="10"/>
  </div>
  <div>
    <label for="comment" class="fixedwidth">Comment</label>
    <input type="text" name="comment" id="comment" value="$comment" size="41" maxlength="85"/>
  </div>
  <div>
    <label for="person1" class="fixedwidth">Person 1</label>
    <input type="text" name="person1" id="person1" value="$person1" size="20" maxlength="30"/>
  </div>
  <div>
    <label for="person1Descript" class="fixedwidth">Person 1 description</label>
    <input type="text" name="person1Descript" id="person1Descript" value="$person1Descript" size="30" maxlength="30"/>
  </div>
  <div>
    <label for="person2" class="fixedwidth">Person 2</label>
    <input type="text" name="person2" id="person2" value="$person2" size="20" maxlength="30"/>
  </div>
  <div>
    <label for="person2Descript" class="fixedwidth">Person 2 description</label>
    <input type="text" name="person2Descript" id="person2Descript" value="$person2Descript" size="30" maxlength="30"/>
  </div>
  <div>
    <label for="person3" class="fixedwidth">Person 3</label>
    <input type="text" name="person3" id="person3" value="$person3" size="20" maxlength="30"/>
  </div>
  <div>
    <label for="person3Descript" class="fixedwidth">Person 3 description</label>
    <input type="text" name="person3Descript" id="person3Descript" value="$person3Descript" size="30" maxlength="30"/>
  </div>
  <div>
    <input type="hidden" name="mode" value="stageThree">
    <input type="hidden" name="submitCounter" value="$submitCounter">
    <input type="hidden" name="businessName" value="$businessName">
  </div>
  <div class="buttonarea">    
    <input type="submit" name="submit" value="Edit shop data"/>
  </div>
  </fieldset>
</form>

EOUSERFORMSTR;
  echo $userform_str;
  site_footer();
  return;
}

?>